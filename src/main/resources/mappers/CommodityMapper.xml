<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.orange.ssm.mapper.CommodityMapper">
  <resultMap id="BaseResultMap" type="com.orange.ssm.entity.Commodity">
    <!--@mbg.generated-->
    <result column="commodityId" jdbcType="INTEGER" property="commodityid" />
    <result column="commodityName" jdbcType="VARCHAR" property="commodityname" />
    <result column="price" jdbcType="DOUBLE" property="price" />
    <result column="number" jdbcType="INTEGER" property="number" />
    <result column="describe" jdbcType="VARCHAR" property="describe" />
  </resultMap>
  <insert id="insert" keyColumn="commodityId" keyProperty="commodityid" parameterType="com.orange.ssm.entity.Commodity" useGeneratedKeys="true">
    <!--@mbg.generated-->
    insert into commodity (commodityName, price, `number`, 
      `describe`)
    values (#{commodityname,jdbcType=VARCHAR}, #{price,jdbcType=DOUBLE}, #{number,jdbcType=INTEGER}, 
      #{describe,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" keyColumn="commodityId" keyProperty="commodityid" parameterType="com.orange.ssm.entity.Commodity" useGeneratedKeys="true">
    <!--@mbg.generated-->
    insert into commodity
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="commodityname != null">
        commodityName,
      </if>
      <if test="price != null">
        price,
      </if>
      <if test="number != null">
        `number`,
      </if>
      <if test="describe != null">
        `describe`,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="commodityname != null">
        #{commodityname,jdbcType=VARCHAR},
      </if>
      <if test="price != null">
        #{price,jdbcType=DOUBLE},
      </if>
      <if test="number != null">
        #{number,jdbcType=INTEGER},
      </if>
      <if test="describe != null">
        #{describe,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
    <select id="selectAll" resultMap="BaseResultMap">

        select * from commodity

        where
        commodityId=#{commodityId};

    </select>


    <update id="deleteById">

        update commodity set flag=1

        where
        commodityId = #{commodityId};

    </update>

    <select id="findByKeyword" resultMap="BaseResultMap">

        select  c.commodityId,c.commodityName,c.number,c.price,c.describe

        from commodity c

        where

        c.commodityName LIKE concat(concat('%' , #{keyword}) ,'%') or c.commodityId  like concat(concat('%' , #{keyword}) , '%');


    </select>



</mapper>